{"mappings":"AAAA;AACA,MAAM,wBAAwB,IAAI;AAClC,sBAAsB,WAAW,CAC/B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2FD,CAAC;AAGH,MAAM,kBAAkB;IACtB,OAAO,qBAAqB,EAAE;IAC9B,aAAc;QACZ,KAAK;QACL,UAAU,kBAAkB,IAAI;QAChC,IAAI,CAAC,kBAAkB,GAAG,UAAU,kBAAkB;QACtD,IAAI,CAAC,gBAAgB,GAAG;QACxB,MAAM,SAAS,IAAI,CAAC,YAAY,CAAC;YAAE,MAAM;QAAO;QAChD,IAAI,CAAC,UAAU,CAAC,kBAAkB,GAAG;YAAC;SAAsB;QAE5D,OAAO,SAAS,GAAG,CAAC;;;uBAGD,EAAE,UAAU,kBAAkB,CAAC;;;;;;;;;;;;;IAalD,CAAC;IACH;IAEA,oBAAoB;QAClB,MAAM,mBAAmB,IAAI,CAAC,UAAU,CAAC,aAAa,CACpD,CAAC,WAAW,EAAE,UAAU,kBAAkB,EAAE;QAE9C,IAAI,CAAC,gBAAgB,GAAG;QACxB,MAAM,yBAAyB,iBAAiB,aAAa,CAAC;QAE9D,IAAI,wBACF,uBAAuB,gBAAgB,CAAC,SAAS,CAAC,IAAM,IAAI,CAAC,eAAe,CAAC;QAG/E,IAAI,CAAC,cAAc;IACrB;IAEA,uBAAuB;QACrB,MAAM,yBAAyB,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;QAEnE,IAAI,wBACF,uBAAuB,mBAAmB,CAAC,SAAS,IAAI,CAAC,eAAe;IAE5E;IAEA,iBAAiB;QACf,MAAM,iBAAiB,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;QAE3D,IAAI,IAAI,CAAC,YAAY,CAAC,2BAA2B,gBAC/C,eAAe,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;IAEjD;IAEA,gBAAgB,CAAC,EAAE;QACjB,MAAM,iBAAiB,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;QAC3D,MAAM,WAAW,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC;QAC1D,MAAM,aAAa,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;QAEvD,IAAI,YAAY,gBAAgB;YAC9B,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC;YACvC,WAAW,KAAK,CAAC,SAAS,GACxB;YACF,eAAe,KAAK,CAAC,SAAS,GAAG;QACnC;QACA,IAAI,CAAC,YAAY,gBAAgB;YAC/B,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC;YACpC,WAAW,KAAK,CAAC,SAAS,GACxB;YACF,eAAe,KAAK,CAAC,SAAS,GAAG,GAAG,eAAe,YAAY,CAAC,EAAE,CAAC;QACrE;IACF;IAEA,gBAAgB;QACd,IAAI,IAAI,CAAC,gBAAgB,EACvB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,aAAa,EACpD,AAAC,CAAA,IAAI,CAAC,kBAAkB,GAAG,CAAA,IAAK,IACjC,sBAAsB,CAAC;IAC5B;AACF;AAEA,eAAe,MAAM,CAAC,uBAAuB","sources":["src/Components/Accordion.js"],"sourcesContent":["\"use strict\";\r\nconst accordionSharedStyles = new CSSStyleSheet();\r\naccordionSharedStyles.replaceSync(\r\n  `\r\n  :host {\r\n    --accordion-animation-delay: 0.3s;\r\n  }\r\n  * {\r\n    font-family: var(--main-font);\r\n    color: var(--font-color);\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-weight: normal;\r\n  }\r\n  .accordion {\r\n    opacity: 0;\r\n  }\r\n  .accordion > button {\r\n    cursor: pointer;\r\n    border: unset;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n    font-size: 2rem;\r\n    padding: 1rem;\r\n    border-radius: 1rem;\r\n    background-color: var(--neutral-color);\r\n    box-shadow: 0 7px var(--secondary-color);\r\n    transition: all var(--accordion-animation-delay) ease-in-out;\r\n  }\r\n  .accordion > button:hover {\r\n    filter: brightness(1.2);\r\n  }\r\n  .accordion > button > svg {\r\n    width: 3rem;\r\n    height: 3rem;\r\n  }\r\n  .accordion > button > svg > path {\r\n    fill: var(--font-color);\r\n  }\r\n  .accordion > .accordion-panel {\r\n    background-color: var(--primary-color);\r\n    margin: 1rem;\r\n    border-radius: 1rem;\r\n    max-height: 0;\r\n    overflow: hidden;\r\n    box-sizing: border-box;\r\n    transition: max-height var(--accordion-animation-delay) ease-in-out;\r\n  }\r\n  .accordion.active > button {\r\n    transform: translateY(5px);\r\n    box-shadow: 0 2px var(--secondary-color);\r\n  }\r\n  .accordion.active > .accordion-panel {\r\n    max-height: auto;\r\n  }\r\n  .accordion-panel-container {\r\n    padding: 1rem;\r\n  }\r\n\r\n  @keyframes accordion-active-arrow {\r\n    from {\r\n      transform: rotate(0);\r\n    }\r\n    80% {\r\n      transform: rotate(210deg);\r\n    }\r\n    to {\r\n      transform: rotate(180deg);\r\n    }\r\n  }\r\n  @keyframes accordion-inactive-arrow {\r\n    from {\r\n      transform: rotate(-180deg);\r\n    }\r\n    80% {\r\n      transform: rotate(30deg);\r\n    }\r\n    to {\r\n      transform: rotate(0);\r\n    }\r\n  }\r\n  @keyframes slideDown {\r\n    from {\r\n      transform: translateY(-3rem);\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      transform: translateY(0);\r\n      opacity: 1;\r\n    }\r\n  }\r\n  `\r\n);\r\n\r\nclass Accordion extends HTMLElement {\r\n  static accordionIdCounter = 0;\r\n  constructor() {\r\n    super();\r\n    Accordion.accordionIdCounter += 1;\r\n    this.accordionIdCounter = Accordion.accordionIdCounter;\r\n    this.accordionElement = null;\r\n    const shadow = this.attachShadow({ mode: \"open\" });\r\n    this.shadowRoot.adoptedStyleSheets = [accordionSharedStyles];\r\n\r\n    shadow.innerHTML = `\r\n    <style>\r\n    </style>\r\n    <div id=\"accordion-${Accordion.accordionIdCounter}\" class=\"accordion\">\r\n      <button type=\"button\">\r\n        <div class=\"accordion-title\">NULL</div>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 -960 960 960\">\r\n          <path d=\"m296-345-56-56 240-240 240 240-56 56-184-183-184 183Z\"/>\r\n        </svg>\r\n      </button>\r\n      <div class=\"accordion-panel\">\r\n        <div class=\"accordion-panel-container\">\r\n          <slot></slot>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    `;\r\n  }\r\n\r\n  connectedCallback() {\r\n    const accordionElement = this.shadowRoot.querySelector(\r\n      `#accordion-${Accordion.accordionIdCounter}`\r\n    );\r\n    this.accordionElement = accordionElement;\r\n    const accordionButtonElement = accordionElement.querySelector(\"button\");\r\n\r\n    if (accordionButtonElement) {\r\n      accordionButtonElement.addEventListener(\"click\", (e) => this.toggleAccordion(e));\r\n    }\r\n\r\n    this.updateTemplate();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const accordionButtonElement = this.accordionElement.querySelector(\"button\");\r\n\r\n    if (accordionButtonElement) {\r\n      accordionButtonElement.removeEventListener(\"click\", this.toggleAccordion);\r\n    }\r\n  }\r\n\r\n  updateTemplate() {\r\n    const accordionTitle = this.accordionElement.querySelector(\".accordion-title\");\r\n\r\n    if (this.hasAttribute(\"data-accordion-title\") && accordionTitle) {\r\n      accordionTitle.innerText = this.getAttribute(\"data-accordion-title\");\r\n    }\r\n  }\r\n\r\n  toggleAccordion(e) {\r\n    const accordionPanel = this.accordionElement.querySelector(\".accordion-panel\");\r\n    const isActive = this.accordionElement.classList.contains(\"active\");\r\n    const svgElement = this.accordionElement.querySelector(\"button > svg\");\r\n\r\n    if (isActive && accordionPanel) {\r\n      this.accordionElement.classList.remove(\"active\");\r\n      svgElement.style.animation =\r\n        \"accordion-inactive-arrow var(--accordion-animation-delay) ease-in-out forwards\";\r\n      accordionPanel.style.maxHeight = 0;\r\n    }\r\n    if (!isActive && accordionPanel) {\r\n      this.accordionElement.classList.add(\"active\");\r\n      svgElement.style.animation =\r\n        \"accordion-active-arrow var(--accordion-animation-delay) ease-in-out forwards\";\r\n      accordionPanel.style.maxHeight = `${accordionPanel.scrollHeight}px`;\r\n    }\r\n  }\r\n\r\n  animateFadeIn() {\r\n    if (this.accordionElement)\r\n      this.accordionElement.style.animation = `1s slideDown ${\r\n        (this.accordionIdCounter - 1) * 0.3\r\n      }s ease-in-out forwards`;\r\n  }\r\n}\r\n\r\ncustomElements.define(\"accordion-component\", Accordion);\r\n"],"names":[],"version":3,"file":"index.8a1ee3e4.js.map","sourceRoot":"/__parcel_source_root/"}